input {
    file {
        type => "icgc-specimen"
        # This is necessary to ensure that the file is
        # processed in full. Without it logstash will default
        # to only processing new entries to the file (as would
        # be seen with a logfile for a live application, but
        # not static data like we're working with here)
        start_position  => "beginning"
        # This is the full path to the file to process.
        # Wildcards are valid.
        path =>  "/data/specimen.tsv"
        # If I'm testing with a small test log that I want to repeatedly restart I just turn off the sincedb:
        # This config causes logstash to start at the beginning of the file every time.
        sincedb_path => "/dev/null"
    }
}

filter {
  if [type] == "icgc-specimen" {
        # Process the input using the csv filter.
        # The list of column names I took manually from the
        # file itself
        csv {
                # note: this must be an actual tab character
                separator => "	"
                columns => ["icgc_specimen_id",
                "project_code",
                "study_specimen_involved_in",
                "submitted_specimen_id",
                "icgc_donor_id",
                "submitted_donor_id",
                "specimen_type",
                "specimen_type_other",
                "specimen_interval",
                "specimen_donor_treatment_type",
                "specimen_donor_treatment_type_other",
                "specimen_processing",
                "specimen_processing_other",
                "specimen_storage",
                "specimen_storage_other",
                "tumour_confirmed",
                "specimen_biobank",
                "specimen_biobank_id",
                "specimen_available",
                "tumour_histological_type",
                "tumour_grading_system",
                "tumour_grade",
                "tumour_grade_supplemental",
                "tumour_stage_system",
                "tumour_stage",
                "tumour_stage_supplemental",
                "digital_image_of_stained_section",
                "percentage_cellularity",
                "level_of_cellularity"]
                add_field => {
                  "description" => "A %{specimen_type} %{specimen_donor_treatment_type}"
                  "individual_id" => "%{project_code}-%{icgc_donor_id}"
                }
            }
			
        # throw away header
        if [icgc_specimen_id] == "icgc_specimen_id" {
          drop {}
        }

        if [icgc_specimen_id] {
          mutate { add_field => { "specimenId" => "%{icgc_specimen_id}" } }
        } else {
          mutate { add_field => { "specimenId" => "UNKNOWN" } }
        }
			
        if [project_code] {
          mutate { add_field => { "projectCode" => "%{project_code}" } }
        }
		
        if [icgc_donor_id] {
          mutate { add_field => { "patientId" => "%{icgc_donor_id}" } }
        } else {
          mutate { add_field => { "patientId" => "UNKNOWN" } }
        }

        if [specimen_type] {
          mutate { add_field => { "specimenType" => "%{specimen_type}" } }
        } else {
          mutate { add_field => { "specimenType" => "UNKNOWN" } }
        }

		mutate {
		  convert => {"specimen_interval" => "integer" }
		  convert => {"percentage_cellularity" => "integer" }
		}
  }
}

output {
  if [type] == "icgc-specimen" {

        # Now send it to Elasticsearch which here is running
        # on the same machine.
        elasticsearch {
          hosts => ["elasticsearch:9200"]
          index => "specimen-icgc"
          document_type => "specimen"
          document_id => "%{project_code}-%{icgc_specimen_id}"
          template_overwrite => true
       	  template => "/data/default_index_template.json"
        }
        stdout { codec => rubydebug }

  }
}
