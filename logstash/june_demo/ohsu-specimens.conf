input {
    file {
        type => "ohsu-donor"
        # This is necessary to ensure that the file is
        # processed in full. Without it logstash will default
        # to only processing new entries to the file (as would
        # be seen with a logfile for a live application, but
        # not static data like we're working with here)
        start_position  => "beginning"
        # This is the full path to the file to process.
        # Wildcards are valid.
        path =>  "/data/*/specimens.tsv"
        # This config causes logstash to start at the beginning of the file every time.
        sincedb_path => "/dev/null"
    }
}


filter {
  if [type] == "ohsu-donor" {
        # Process the input using the csv filter.
        # The list of column names I took manually from the
        # file itself
        csv {
                # note: this must be an actual tab character
                separator => "	"
                columns => [
                  "specimen_id",
                  "donor_id",
                  "project_code",
                  "donor_ethnicity",
                  "donor_gender",
                  "donor_race",
                  "donor_vital_status",
                  "specimen_type",
                  "disease_state",
                  "specific_diagnosis",
                  "tumour_staging_system_at_diagnosis",
                  "tumour_stage_at_diagnosis",
                  "tumour_stage_system",
                  "tumour_stage",
                  "tumour_grading_system",
                  "tumour_grade"
                ]


                add_field => {
                  "description" => "A %{donor_vital_status} %{donor_gender} %{donor_ethnicity} with %{specific_diagnosis} %{tumour_stage}"
                  "species" => "NCBITaxon:9606"
                }
            }


        if [donor_id] == "donor_id" {
          drop {}
        }

        if ![donor_id]  {
          drop { }
        }

        if [donor_gender] {
          mutate { add_field => { "sex" => "%{donor_gender}" } }
        } else {
          mutate { add_field => { "sex" => "UNKNOWN" } }
        }



        mutate {

          uppercase => [ "sex" ]
          remove_field => [
            "specimen_id",
            "specimen_type",
            "tumour_staging_system_at_diagnosis",
            "tumour_stage_at_diagnosis",
            "tumour_stage_system",
            "tumour_stage",
            "tumour_grading_system",
            "tumour_grade"
           ]
        }
  }
}

output {
  if [type] == "ohsu-donor" {
        # Now send it to Elasticsearch which here is running
        # on the same machine.
        elasticsearch {
          hosts => ["192.168.99.100:9202"]
          index => "individual-ohsu"
          document_type => "individual"
          document_id => "%{project_code}-%{donor_id}"
        }
        stdout { codec => rubydebug }
  }
}
