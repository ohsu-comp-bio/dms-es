input {
    file {
        type => "file"
        # This is necessary to ensure that the file is
        # processed in full. Without it logstash will default
        # to only processing new entries to the file (as would
        # be seen with a logfile for a live application, but
        # not static data like we're working with here)
        start_position  => "beginning"
        # This is the full path to the file to process.
        # Wildcards are valid.
        path =>  "/data/ttt.csv"
        # If I'm testing with a small test log that I want to repeatedly restart I just turn off the sincedb:
        # This config causes logstash to start at the beginning of the file every time.
        sincedb_path => "/dev/null"
    }
}

filter {
        # Process the input using the csv filter.
        # The list of column names I took manually from the
        # file itself
        csv {separator => ","
                columns => ["a","b"]}

        # Store the date of the donation (rather than now) as the
        # event's timestamp
        #
        # Note that the data in the file uses formats both with and
        # without the milliseconds, so both formats are supplied
        # here.
        # Additional formats can be specified using the Joda syntax
        # (http://joda-time.sourceforge.net/api-release/org/joda/time/format/DateTimeFormat.html)
        #date { match => ["donation_timestamp", "yyyy-MM-dd HH:mm:ss.SSS", "yyyy-MM-dd HH:mm:ss"]}
        # ------------
        # Cast the numeric fields to float (not mandatory but makes for additional analysis potential)
        #mutate {
        #convert => ["donation_optional_support","float"]
        #convert => ["donation_to_project","float"]
        #convert => ["donation_total","float"]
        #}
}

output {
        # Now send it to Elasticsearch which here is running
        # on the same machine.
        elasticsearch {
          hosts => ["192.168.99.100:9201"]
          index => "test"
          document_type => "test"
        }
        stdout { codec => rubydebug }

}
