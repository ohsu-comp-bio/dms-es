input {
    file {
        type => "icgc-resource"
        # This is necessary to ensure that the file is
        # processed in full. Without it logstash will default
        # to only processing new entries to the file (as would
        # be seen with a logfile for a live application, but
        # not static data like we're working with here)
        start_position  => "beginning"
        # This is the full path to the file to process.
        # Wildcards are valid.
        path =>  "/data/donor.tsv"
        # If I'm testing with a small test log that I want to repeatedly restart I just turn off the sincedb:
        # This config causes logstash to start at the beginning of the file every time.
        sincedb_path => "/dev/null"
    }
}


filter {
  if [type] == "icgc-resource" {
        # Process the input using the csv filter.
        # The list of column names I took manually from the
        # file itself
        csv {

                # note: this must be an actual tab character
                separator => "	"
                columns => ["icgc_donor_id",
                  "project_code"]


                  add_field => {
                     "description" => "A %{resource_type}"
                     "individual_id" => "%{project_code}-%{icgc_donor_id}"
                     "datasetId" => "%{project_code}-%{icgc_donor_id}:uuid"
                     "url" => "/%{project_code}/%{icgc_donor_id}/uuid"
                  #           "format" => "//TODO url"
                  #           "description",
                  #           "hash",
                  #           "name",
                  #           "resource_type",
                  #           "mimetype",
                  #           "mimetype_inner",
                  #           "size",
                  #           "created",
                  #           "last_modified",
                  #           "extras"
                   }

            }

        if [icgc_donor_id] == "icgc_donor_id" {
          drop {}
        }

  }
}

output {
  if [type] == "icgc-resource" {
        # Now send it to Elasticsearch which here is running
        # on the same machine.
        elasticsearch {
          hosts => ["elasticsearch:9200"]
          index => "resource-icgc"
          document_type => "resource"
          document_id => "%{project_code}-%{icgc_donor_id}"
          # see https://www.elastic.co/blog/new-in-logstash-1-3-elasticsearch-index-template-management
          template_overwrite => true
       	  template => "/data/default_index_template.json"
        }
        stdout { codec => rubydebug }
  }
}
